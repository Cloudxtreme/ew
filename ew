#!/bin/bash

# -----------------------------------------------------------------------------
#                           ew -- an egrep wrapper
#                           ----------------------
# Provide a wrapper for egrep that avoids binary files and VCS metadata, plus
# some other features; see usage message below.

# -----------------------------------------------------------------------------
# Usage:
#   ew [-G glob-to-search]* [other egrep options] egrep-pattern
#
# ew is an 'egrep wrapper'
#
# Features:
#   1.  forces egrep syntax (-E).  When input is a terminal, also forces
#       recursion (-r), and ignores binary files (-I).  Exclusions are handled
#       by setting the environment variable GREP_OPTIONS.  For example:
#           export GREP_OPTIONS="--exclude-dir=.git"
#   2.  'smartcase' emulation: if the pattern does not have any uppercase
#       letters, adds the '-i' flag
#   3.  you can restrict the search to specific glob(s) -- use as many '-G'
#       options as you want.  Be sure to escape meta-characters.  Examples:
#           ew pattern -G \*.c -G \*.h
#   4.  any other options will be passed on to grep so you're not losing any
#       grep functionality
#   5.  if the environment variable 'D' exists, ew will show you the generated
#       egrep command before executing.  For example:
#           D=1 ew pattern -G \*.pl
#
# Caveats:
#   1.  if using as a pipe, put the pattern at the end to get smartcase
#   2.  standard grep options that need arguments must have the arguments
#       'stuck' to them (like '-C4' instead of '-C 4').  In practice the only
#       ones affected are -m, -A, -B, and -C.  If you need -f, use the
#       '--file=' form.
#   Both these caveats are because I'm too lazy to use shopts :-)  I'll fix it
#   someday, or if anyone asks.
#
# Tip: to get ack's passthru mode, just prefix your pattern with '$|' (or
# '$\|' to protect it from the shell).  Grep will do the rest ;-)

# -----------------------------------------------------------------------------
# Wishlist
#   - the perl re syntax instead of egrep syntax

# -----------------------------------------------------------------------------
# helper function
smartcase()
{
    [[ "$1" =~ [A-Z] ]] && return
    echo '-i'
}

# -----------------------------------------------------------------------------
# main program

# features implemented:
#   - force egrep syntax
#   - color-auto
#   - emulate ack's smart case mode
#   - -G glob  (only filenames matching pattern will be searched)
#       (1) grep's -G is useless to us most of the time, so we usurp it
#       (2) this is not a regex like in ack; it's a glob
#     you can have multiple -G options
#   - smartcase
#   - ignore .git (maybe others later)

unset patt
[[ -t 0 ]] || stdin=-

args=(-E -D skip --color=auto -I -r)

while [[ -n $1 ]]
do
    [[ $1 =~ ^-G$ ]] && {
        args=("${args[@]}" --include="$2")
        shift; shift
        continue
    }
    [[ $1 =~ ^-e$ ]] && {
        args=("${args[@]}" $(smartcase "$2") -e "$2")
        patt="$2"
        shift; shift
        continue
    }
    # other options
    [[ $1 =~ ^- ]] && {
        args=("${args[@]}" "$1")
        shift
        continue
    }
    # non-option arguments
    [[ -z $patt ]] && {
        # The first non-option arg is the pattern
        args=("${args[@]}" $(smartcase "$1") -e "$1")
        patt="$1"
        shift
        continue
    }
    # The other non-option args are directories to search
    args=("${args[@]}" "$1")
    shift
    continue
done

[[ -z $patt ]] && {
    sed -n -e'/^# Usage:/,/^$/p' < $0 |cut -c3-
    exit 1
}

[[ -n $D ]] && set -x
grep "${args[@]}" $stdin
